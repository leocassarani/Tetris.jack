class TetrisGame {
    field Board board;
    field Tetromino tetromino;
    field int type;

    constructor TetrisGame new() {
        do Screen.clearScreen();

        // (196, 1)         (316, 1)
        // +-----------------------+
        // |                       |
        // |                       |
        // +-----------------------+
        // (196, 254)     (316, 254)

        let board = Board.new(196, 2, 21, 12);
        do board.drawOutline();

        let tetromino = Tetromino.new(0, 3, 19, board);
        do tetromino.show();

        let type = 0;

        return this;
    }

    method void dispose() {
        do tetromino.dispose();
        do board.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() {
        var char key;
        var int waited;

        while (true) {
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do Sys.wait(100);

                let waited = waited + 1;
                if (waited = 5) {
                    do step();
                    let waited = 0;
                }
            }

            while (~(key = 0)) {
                if (key = 130) { // left
                    do tetromino.moveLeft();
                } else {
                    if (key = 132) { // right
                        do tetromino.moveRight();
                    } else {
                        if (key = 131) { // up
                            do tetromino.rotate();
                        } else {
                            if (key = 133) { // down
                                do step();
                            }
                        }
                    }
                }

                do Sys.wait(100);

                let waited = waited + 1;
                if (waited = 5) {
                    do step();
                    let waited = 0;
                }

                let key = Keyboard.keyPressed();
            }
        }

        return;
    }

    method void step() {
        if (tetromino.step()) {
            return;
        }

        do board.clearFullLines();

        let type = type + 1;
        if (type > 6) {
            let type = 0;
        }

        do tetromino.reset(type, 3, 20);
        do tetromino.show();

        return;
    }
}
